# Previously this was application.properties.
# But to connect to Spring Cloud Config Server and fetch the property values, we have renamed this to bootstrap.properties

# NOTE : Ports for this service is 8080, 8081, ...


# In this file, we just have application name and Spring Cloud Config Server URL to fetch the property values. 
spring.application.name=limits-service
spring.cloud.config.uri=http://localhost:8888
# NOTE : First run Spring Cloud Config Server and then start other applications.
# NOTE : If any changes made in Spring Cloud Config Server, the changed files has to be committed in Git
# and then other applications need to be restarted to fetch the updated property values. 

# If we hit http://localhost:8080/limits we will get the values from default properties file that is in Spring Cloud Config Server.
# If we need to use Dev property values, we can set the following :
#spring.profiles.active=dev
# Values will be picked from limits-service-dev.properties

spring.profiles.active=qa
# Values will be picked from limits-service-qa.properties

# Commenting the below properties because, we are fetching the values from Spring Cloud Config Server

#limits-service.minimum=9
#limits-service.maximum=999

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
# The above is the property to set the URL of Eureka Naming Server

management.endpoints.web.exposure.include=*
# The above property is added to enable all tests in /actuator
# To view HAL Browser -> http://localhost:8080
# To view actuator -> Go to HAL Browser and type /actuator
# To view all beans, select GET request button that is present next to beans
# Not only beans, many more like /env, /metrics, /trace, /dump, /shutdown, /beans, / autoconfig, /configprops, /mappings

management.security.enabled=false
# The above property is to disable the security for the Actuator

# Not required
#spring.cloud.bus.enabled=true
#management.endpoints.web.exposure.include=bus-refresh